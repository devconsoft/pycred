@startuml

title PyCred Data Flow

actor Application as app
participant PyCred as pycred
participant "Configuration Manager" as cm
participant "Factory" as factory
database "PyCred Config" as config
database "Store Config" as storeconfig
box "Store"
participant "Store" as store
participant "Storage" as storage
participant "Encryption" as encrypt
participant "Serializer" as serializer
end box

== initilize store ==

app -> pycred : get store ("store")
activate pycred

pycred -> cm: get store config ("store")
activate cm

cm -> config : get store_path
activate config
cm <- config : store_path
deactivate config
cm -> storeconfig : get store config (store_path, "store")
activate storeconfig
cm <- storeconfig : <store config>
deactivate storeconfig
pycred <- cm: <store config>
deactivate cm

pycred -> factory: get store (<store config>)
activate factory
factory -> storage : initilize(<config>)
activate storage
factory -> encrypt : initilize(<config>)
activate encrypt
factory -> serializer : initilize(<config>)
activate serializer
factory -> store : initilize(<config>)
activate store
pycred <- factory: <store>
deactivate factory

app <- pycred : <store>
deactivate pycred

== get credentials for user ==

app -> store: get_credentials("user")
activate store #gray

store -> storage : get_data("user")
activate storage #gray
store <- storage : <encrypted-data>
deactivate storage

store -> encrypt : decrypt(<encrypted-data>)
activate encrypt #gray
store <- encrypt : <data>
deactivate encrypt

store -> serializer : deserialize(<data>)
activate serializer #gray
store <- serializer : <credentials(username, password)>
deactivate serializer

app <- store : <credentials(username, password)>
deactivate store

deactivate store
deactivate storage
deactivate encrypt
deactivate serializer


@enduml
